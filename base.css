/* ==================================================
Legend:
ðŸ”§ = Styles that fixes cross-browser inconsistencies, or
	consistent, cross-browser default styling of HTML elements.
âœ¨ = Styles that are more opinionated and may not be suitable for all projects. Personal preference.
================================================== */

/* Global
================================================== */

/*
1. Use the more intuitive and predictable border box sizing by default (https://wiki.csswg.org/ideas/mistakes).
2. Don't repeat background images by default (https://wiki.csswg.org/ideas/mistakes).
3. Don't repeat mask images by default.
*/

*,
::before,
::after {
	box-sizing: border-box; /* 1 */
	background-repeat: no-repeat; /* 2 */
	mask-repeat: no-repeat; /* 3 */
}

/*
Revert 'background-repeat: no-repeat' for some form controls to avoid removing their native appearance in Safari.
*/

:where(button, input, meter, progress, select),
:where(button, input, meter, progress, select)::before,
:where(button, input, meter, progress, select)::after {
	background-repeat: revert;
}

/*
1. Use a sans serif font by default.
2. The default 'normal' line-height is tightly spaced, but takes font metrics into account, which is important for many fonts. Looser spacing may improve readability in latin type, but may cause problems in some scripts -- from cursive/fantasy fonts to Javanese, Persian, and CJK languages.
3. Break words when there is not enough space to prevent text overflow.
4. Use a shorter, more readable tab size (default is 8).
5. Prevent WebKit-based browsers on iOS from automatically increasing the default font size in landscape orientation (demo: https://codepen.io/germanfrelo/pen/JoPJVxd).
6. Prevent unwanted layout shifts caused by scrollbars when text gets longer.
*/

html {
	font-family: sans-serif; /* 1 */
	line-height: 1.5; /* 2 */
	overflow-wrap: break-word; /* 3 */
	tab-size: 4; /* 4 */
	-webkit-text-size-adjust: none; /* 5 */ /* stylelint-disable-line property-no-vendor-prefix */
	scrollbar-gutter: stable; /* 6 */
}

/*
Smooth scrolling, but only when focused in the page to prevent unnaturally scrolling when tabbing though the results of a search.
*/

html:focus-within {
	scroll-behavior: smooth;
}

/*
When users prefer reduced motion:
1. Remove fixed background attachment.
2. Remove transitions.
3. Remove animations/immediately jump any animation to the end point.
4. Remove timed scrolling behaviors.
*/

@media (prefers-reduced-motion: reduce) {
	*,
	*::before,
	*::after {
		background-attachment: initial !important; /* 1 */
		transition-delay: 0s !important; /* 2 */
		transition-duration: 0s !important; /* 2 */
		animation-duration: 1ms !important; /* 3 */
		animation-delay: -1ms !important; /* 3 */
		animation-iteration-count: 1 !important; /* 3 */
		scroll-behavior: auto !important; /* 4 */
	}

	html:focus-within {
		scroll-behavior: auto; /* 4 */
	}
}

/*
When scrolling to target elements, a reasonable spacing is added above them to ensure they remain visible, especially with sticky headers or similar. Adjust as needed.
Reference: https://piccalil.li/blog/a-more-modern-css-reset/
*/

:target {
	scroll-margin-block-start: 5em;
}

/* Page
================================================== */

/*
Remove the default 8px margin from 'body', which is usually not wanted, in favor of better control in authored CSS.
*/

body {
	margin: 0;
}

/*
Makes 'body' fill the entire viewport height. Useful for:
- Creating a sticky footer (demo: https://codepen.io/germanfrelo/pen/jOGNpbj).
- Vertically center direct child elements of 'body' using only 'align-content' (demo: https://codepen.io/germanfrelo/pen/mybMMQO).
*/

html {
	block-size: 100%;
}

body {
	min-block-size: 100%;
}

/* Headings
================================================== */

/*
Prevent the 'font-size' and 'margin' of 'h1' from decreasing when nested inside sectioning elements (article, aside, nav, section).
Keep h1 font size and margins consistent, even when nested.
All three major browser engines (Blink, Gecko, and WebKit) map the formatting of an 'h1' to smaller headlines ('h2', 'h3', 'h4', 'h5', 'h6') according to how many levels deep it is inside a sectioning element ('article', 'aside', 'nav', 'section').
References:
- https://github.com/jensimmons/cssremedy/issues/2
- https://developer.mozilla.org/en-US/docs/Web/HTML/Element/Heading_Elements#avoid_using_multiple_h1_elements_on_one_page
- https://github.com/whatwg/html/issues/7867
*/

:where(h1) {
	margin-block: 0.67em;
	font-size: 2em;
}

/*
The default 'normal' line-height is tightly spaced, but takes font metrics into account, which is important for many fonts. Looser spacing may improve readability in latin type, but may cause problems in some scripts -- from cursive/fantasy fonts to Javanese, Persian, and CJK languages.
*/

h1,
h2,
h3,
h4,
h5,
h6 {
	line-height: 1.25;
}

/*
Switch to rem units for headings.
*/

h1 {
	font-size: 2rem;
}

h2 {
	font-size: 1.5rem;
}

h3 {
	font-size: 1.17rem;
}

h4 {
	font-size: 1rem;
}

h5 {
	font-size: 0.83rem;
}

h6 {
	font-size: 0.67rem;
}

/* Grouping content
================================================== */

/*
1. Fix the inheritance and scaling of the font size in all browsers.
2. Fix the odd 'em' font sizing in all browsers.
3. Prevent overflow of the container.
*/

pre {
	font-family: monospace, monospace; /* 1 */
	font-size: 1em; /* 2 */
	white-space: pre-wrap; /* 3 */
}

/*
Sets a consistent and modern default look for 'hr':
1. Reverts the default 'gray' color in Firefox and Safari to allow the text foreground color to be used as the border color.
2. Removes all default '1px inset' borders to instead use a single border with a 'solid' style and a border width of '2px' to have the same height as before.
*/

hr {
	color: inherit; /* 1 */
	border: none; /* 2 */
	border-block-start: 2px solid; /* 2 */
}

/*
The default 'normal' line-height is tightly spaced, but takes font metrics into account, which is important for many fonts. Looser spacing may improve readability in latin type, but may cause problems in some scripts -- from cursive/fantasy fonts to Javanese, Persian, and CJK languages.
*/

figcaption {
	line-height: 1.375;
}

/*
Remove the default 40px indentation from 'figure' and 'menu', which is usually not wanted, in favor of better control in authored CSS.
*/

figure {
	margin-inline: 0;
}

menu {
	padding-inline-start: 0;
}

/*
Replace the default 40px indentation of 'blockquote', 'dd', 'ol' and 'ul' with a value relative to the font.
Loosely based on https://github.com/jensimmons/cssremedy/issues/17
*/

:where(blockquote) {
	margin-inline: 3ch;
}

:where(dd) {
	margin-inline-start: 3ch;
}

:where(ol, ul) {
	padding-inline-start: 3ch;
}

/*
Increase the gap after the list marker for 'ol' and 'ul'.
*/

:where(:is(ol, ul) > li) {
	padding-inline-start: 0.5ch;
}

/* Text-level semantics
================================================== */

/*
Keep the default 'font-weight' of 'b' and 'strong' consistent across browsers.
Reference: https://css-tricks.com/firefoxs-bolder-default-is-a-problem-for-variable-fonts/
*/

b,
strong {
	font-weight: bold;
}

/*
1. Fix the inheritance and scaling of the font size in all browsers.
2. Fix the odd 'em' font sizing in all browsers.
*/

code,
kbd,
samp {
	font-family: monospace, monospace; /* 1 */
	font-size: 1em; /* 2 */
}

/* Embedded content
================================================== */

/*
Block by default is usually what we want/the most common use case (default is 'inline').
*/

audio,
canvas,
embed,
iframe,
img,
object,
video {
	display: block;
}

/*
Responsive by default to prevent them from growing beyond the container.
*/

audio,
canvas,
embed,
iframe,
img,
object,
svg,
video {
	max-inline-size: 100%;
}

/*
Maintain intrinsic aspect ratios when 'max-inline-size' is applied.
Note: 'embed', 'iframe' and 'object' have no intrinsic ratio, so their 'block-size' needs to be set explicitly.
*/

canvas,
img,
svg,
video {
	block-size: auto;
}

/*
TODO: REMOVE THIS?
The display is inline by default, but that's not the expected behavior. This can interfere with proper layout and aspect-ratio handling.
1. Remove the unnecessary wrapping 'picture', while maintaining contents.
2. Source elements have nothing to display, so we hide them entirely.
*/

picture {
	display: contents; /* 1 */
}

source {
	display: none; /* 2 */
}

/*
There is no good reason 'audio' defaults to 300px, and audio files are unlikely to come with a 'width' attribute.
*/

audio {
	inline-size: 100%;
}

/*
TODO: Too opinionated? Remove it?
Use a more useful 'vertical-align' default value for SVGs (default is 'baseline'), in case authors want to use them as inline icons.
*/

svg {
	vertical-align: middle;
}

/*
TODO: Too opinionated? Remove it?
Make SVGs inherit color if neither they nor their 'path' have a 'fill' attribute.
*/

svg:where(:not([fill]):has(> path:not([fill]))) {
	fill: currentcolor;
}

/*
Change the border appearance.
*/

iframe {
	border-color: currentcolor;
	border-style: solid;
}

/* Tabular data
================================================== */

/*
TODO: Too opinionated? 1. Ensure numbers line up (ref: https://github.com/jensimmons/cssremedy/issues/39#issuecomment-473012250)
2. Prevent double borders.
3. Fix the default table 'border-color: gray' on Chrome (bug: https://issues.chromium.org/issues/40615503).
*/

table {
	font-variant-numeric: tabular-nums; /* 1 */
	border-collapse: collapse; /* 2 */
	border-color: currentcolor; /* 3 */
}

/*
Make 'th' alignment consistent with 'td' alignment.
*/

th {
	text-align: inherit;
}

/*
TODO: Very opinionated? Remove it?
Add paddings and borders to table cells.
*/

:where(th, td) {
	padding-block: 0.25em;
	padding-inline: 0.5rem;
	border: 0.0625rem solid;
}

/*
The default 'normal' line-height is tightly spaced, but takes font metrics into account, which is important for many fonts. Looser spacing may improve readability in latin type, but may cause problems in some scripts -- from cursive/fantasy fonts to Javanese, Persian, and CJK languages.
*/

caption {
	line-height: 1.375;
}

/* Forms
================================================== */

/*
1. Responsive by default by restricting sizing to the page width.
2. Remove the margin on controls in all browsers.
3. Add typography and color inheritance ('line-height' is reverted to avoid removing their native appearance in Safari).
*/

button,
input,
select,
textarea {
	max-inline-size: 100%; /* 1 */
	margin: 0; /* 2 */
	font: inherit; /* 3 */
	line-height: revert; /* 3 */
	letter-spacing: inherit; /* 3 */
	word-spacing: inherit; /* 3 */
	color: inherit; /* 3 */
}

/*
TODO: Make ::placeholder easier to customize?
Fix the text style of placeholders in Chrome and Safari.
*/

::placeholder {
	color: inherit;
	opacity: 1;
}

/*
Change font properties to 'inherit' in Safari.
*/

::file-selector-button {
	font: inherit;
}

/*
1. Remove the default margin.
2. Change the border appearance.
*/

fieldset {
	margin-inline: 0; /* 1 */
	border-color: currentcolor; /* 2 */
	border-style: solid; /* 2 */
}

/*
The default 'normal' line-height is tightly spaced, but takes font metrics into account, which is important for many fonts. Looser spacing may improve readability in latin type, but may cause problems in some scripts -- from cursive/fantasy fonts to Javanese, Persian, and CJK languages.
*/

label,
legend {
	line-height: 1.375;
}

/*
Replace the default 2px inline padding of 'legend' with a value relative to the font.
*/

legend {
	padding-inline: 0.125em;
}

/*
Set 'vertical-align' to middle.
*/

[type="color" i],
[type="range" i] {
	vertical-align: middle;
}

input,
select,
textarea {
	padding: 0.125em 0.25em;
}

button,
[type="button"],
[type="reset"],
[type="submit"] {
	padding: 0.125em 0.5em;
}

[type="checkbox"],
[type="file"],
[type="image"],
[type="radio"],
[type="range"] {
	padding: revert;
}

input,
select,
textarea {
	padding: 0.125em 0.25em;
}

button,
[type="button"],
[type="reset"],
[type="submit"] {
	padding: 0.125em 0.5em;
}

[type="checkbox"],
[type="file"],
[type="image"],
[type="radio"],
[type="range"] {
	padding: revert;
}

/*
TODO: Review this.
Under-Engineered Text Boxen
https://adrianroselli.com/2019/09/under-engineered-text-boxen.html
*/

button,
input:not([type="checkbox"], [type="color"], [type="file"], [type="image"], [type="radio"], [type="range"]),
select,
textarea {
	padding: 0.5em;
	border: 0.125em solid;
}

input:not([type="checkbox"], [type="color"], [type="file"], [type="image"], [type="radio"], [type="range"]):focus,
textarea:focus {
	outline: 0.125em solid #00f;
	box-shadow: 0 0 0.5em #0bf;
}

input:not([type="checkbox"], [type="color"], [type="file"], [type="image"], [type="radio"], [type="range"])[readonly],
textarea[readonly] {
	border-color: rgb(0 0 0 / 42%);
	border-block-start: none;
	border-inline-start: none;
	border-inline-end: none;
}

input:not([type="checkbox"], [type="color"], [type="file"], [type="image"], [type="radio"], [type="range"])[required],
textarea[required] {
	border-inline-start-width: 0.3em;
}

input:not([type="checkbox"], [type="color"], [type="file"], [type="image"], [type="radio"], [type="range"])[aria-invalid],
textarea[aria-invalid="true"],
textarea[aria-invalid="spelling"],
textarea[aria-invalid="grammar"] {
	background: linear-gradient(135deg, rgb(255 0 0 / 100%) 0, rgb(255 0 0 / 100%) 0.4em, rgb(255 255 255 / 100%) 0.4em);
}

*[dir="rtl"] input:not([type="checkbox"], [type="color"], [type="file"], [type="image"], [type="radio"], [type="range"])[aria-invalid],
*[dir="rtl"] textarea[aria-invalid="true"],
*[dir="rtl"] textarea[aria-invalid="spelling"],
*[dir="rtl"] textarea[aria-invalid="grammar"] {
	background: linear-gradient(225deg, rgb(255 0 0 / 100%) 0, rgb(255 0 0 / 100%) 0.4em, rgb(255 255 255 / 100%) 0.4em);
}

/* Hidden elements
================================================== */

/*
Make elements with a 'hidden' attribute stay hidden even if a different display value is set.
References:
- https://html.spec.whatwg.org/multipage/rendering.html#hidden-elements
- https://github.com/jensimmons/cssremedy/issues/71#issuecomment-771180150
- https://github.com/tailwindlabs/tailwindcss/commit/b570e2b
*/

[hidden]:not([hidden="until-found" i], embed) {
	display: none !important;
}

/*
Change the display on visually hidden accessible elements.
*/

[aria-hidden="false" i][hidden] {
	display: initial;
}

[aria-hidden="false" i][hidden]:not(:focus) {
	position: absolute !important;
	width: 1px !important;
	height: 1px !important;
	padding: 0 !important;
	margin: -1px !important;
	overflow: hidden !important;
	/* For legacy browsers */
	clip: rect(1px, 1px, 1px, 1px);
	/* For modern browsers */
	clip-path: inset(50%);
	/* To prevent words from being squashed together (since they go on separate lines, and some screen readers do not understand line feeds as spaces) */
	white-space: nowrap;
	border: 0 !important;
}

/* Interactive elements
================================================== */

/*
Set the cursor for 'summary' to be the same as buttons by default, so they feel more interactive.
Use the same default cursor used for buttons to make it feel interactive (default is 'text').
*/

:where(details > summary:first-of-type) {
	cursor: default;
}

/* Cursor
================================================== */

/*
Change the cursor on busy elements.
*/

[aria-busy="true" i] {
	cursor: progress;
}

/*
Change the cursor on disabled, not-editable, or otherwise inoperable elements.
*/

[disabled],
[aria-disabled="true" i] {
	cursor: not-allowed;
}
